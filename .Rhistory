library('tidyverse')
library(dplyr)
long_df <- stemwijzer_df_clean %>% pivot_longer(cols=colnames(.)[5:29],
names_to='party',
values_to='answer')
# Create unique pairs of political parties for each statement
pairs_df <- long_df %>%
select(Statement, Abbreviation, Tag, Right) %>%
distinct() %>%
expand(Statement, Party1 = long_df$party, Party2 = long_df$party) %>%
filter(Party1 != Party2) %>%
filter(row_number(Party1) < row_number(Party2)) ## To ensure unique rows
# Merge the pairs with the original tibble to get the corresponding answer values
result_df <- pairs_df %>%
left_join(long_df %>% select(Statement, party, answer),
by = c("Statement", "Party1" = "party")) %>%
rename(Value_Party1 = answer) %>%
left_join(long_df %>% select(Statement, party, answer),
by = c("Statement", "Party2" = "party")) %>%
rename(Value_Party2 = answer)
# Print the result dataframe
print(result_df)
statement_right <- stemwijzer_df %>%
select(Statement, Right)
result_df <- left_join(result_df, statement_right, by = "Statement")
stemwijzer_long_df <- result_df %>%
mutate(agreement = ifelse(Value_Party1 == Value_Party2, 1, 0)) %>%
mutate(right_agreement = ifelse((Right == 1 & Value_Party1 == 2 &
Value_Party2 == 2), 1, 0)) %>%
mutate(non_left_agreement = ifelse((Right == 0 & Value_Party1 == 0 &
Value_Party2 == 0), 1, 0))
# Calculate how often parties agree on right_wing statements ####
right_agreement_count <- stemwijzer_long_df %>%
filter(right_agreement == 1 | non_left_agreement == 1) %>%
group_by(Party1, Party2) %>%
summarise(count = n())
right_edge_list <- right_agreement_count %>%
filter(count > 13) %>%
select(Party1, Party2)
# Same approach for agreement count ####
colnames(matrix_of_agreement) <- colnames(stemwijzer_df)[5:29]
agreement_count <- as.data.frame(matrix_of_agreement) %>%
mutate(party2 = colnames(.))
col_names <- colnames(agreement_count)
agreement_count <- agreement_count[, c(length(col_names), 1:(length(col_names)-1))]
counts_of_agreement <- agreement_count %>%
pivot_longer(cols=colnames(.)[2:26],names_to='party', values_to='count') %>%
filter(party2 != party) %>%
select(party2, party, count) %>%
rowwise() %>%
mutate(combined_parties = paste(sort(c(party, party2)), collapse = "_")) %>%
arrange(combined_parties) %>%
distinct(combined_parties, .keep_all = TRUE) %>%
select(-combined_parties)
# min(counts_of_agreement$count) ## 3
# max(counts_of_agreement$count) ## 25
agreement_count_ntwrks <- counts_of_agreement %>%
mutate(more_2 = ifelse(count > 2, 1, 0)) %>%
mutate(more_10 = ifelse(count > 10, 1, 0)) %>%
mutate(more_15 = ifelse(count > 15, 1, 0)) %>%
mutate(more_20 = ifelse(count > 20, 1, 0))
# Creating Networks ####
node_attributes <- read.csv("node_attribute_partijen.csv", sep = ",")
# Transpose Node Attributes
node_attributes <- as.data.frame(t(node_attributes))
colnames(node_attributes) <- node_attributes[1, ]
node_attributes <- node_attributes[-1, ]
node_attributes$Party <- rownames(node_attributes)
node_attributes[1:7] <- lapply(node_attributes[1:7], as.numeric)
# Create a NodeList (keeping it unique) and Join Node Attributes
NodeList <- unique(c(agreement_count_ntwrks$party2, agreement_count_ntwrks$party))
NodeList_df <- as.data.frame(NodeList)
colnames(NodeList_df)[1] <- 'Party'
NodeList_attributes <- NodeList_df %>%
left_join(node_attributes, by = 'Party') %>%
mutate(zittend = ifelse((node_attributes$Seats_2021 > 0), 1, 0)) %>% mutate(Age = 2023 - node_attributes$Year)
# Making the right network for the ERGM study
right_network <- igraph::graph_from_data_frame(right_edge_list,
NodeList, directed = FALSE)
# Add the node attributes to the network
snafun::add_vertex_attributes(right_network,colnames(NodeList_attributes),value = NodeList_attributes)
snafun::g_summary(right_network, directed = FALSE)
# converting it into a network opject
right_network_netpackage <- snafun::to_network(right_network)
plot(right_network_netpackage)
# Adding the network attributes
summary(right_network_netpackage)
# adding the network attributes
right_network_netpackage <- snafun::add_vertex_attributes(right_network_netpackage,value = NodeList_attributes)
# defining the vertex name
right_network_netpackage <- snafun::add_vertex_names(right_network_netpackage,value = NodeList_attributes$Party)
# checking the network attribute
summary(right_network_netpackage)
snafun::extract_all_vertex_attributes(right_network_netpackage)
# summarize the statistics
kstar <- summary(right_network_netpackage ~ kstar(1:12))
kstar/sum(kstar)
summary(right_network_netpackage ~ degree(1:10))
summary(ergm::ergm(right_network_netpackage ~ edges))
ergm1 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") +
kstar(1:6) + degree(1:6) + gwdsp(0.2, fixed = TRUE) + isolates(),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 15000, seed = 234567, MCMLE.maxit = 20,
parallel = 6, parallel.type = "PSOCK"
))
ergm1 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") +
kstar(1:6) + gwdsp(0.2, fixed = TRUE) + isolates(),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 15000, seed = 234567, MCMLE.maxit = 20,
parallel = 6, parallel.type = "PSOCK"
))
ergm1 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") +
degree(1:6) + gwdsp(0.2, fixed = TRUE) + isolates(),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 15000, seed = 234567, MCMLE.maxit = 20,
parallel = 6, parallel.type = "PSOCK"
))
ergm1 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") +
gwdegree(1:6) + gwdsp(0.2, fixed = TRUE) + isolates(),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 20000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm1 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") +
degree(1:6) + gwdsp(0.2, fixed = TRUE) + kstar(3),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 20000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm1 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") +
degree(1:6) + gwdsp(0.2, fixed = TRUE) + kstar(3),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 15000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm1 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") +
gwdegree(0.2, fixed = TRUE 1:6) + gwdsp(0.2, fixed = TRUE) + kstar(3),
??gwdegree
ergm1 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") +
gwdegree(0.2, fixed = TRUE ) + gwdsp(0.2, fixed = TRUE) + kstar(3),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 15000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm1 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") +
gwdegree(0.2, fixed = TRUE ) + gwdsp(0.2, fixed = TRUE),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 15000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm1 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") +
gwdegree(0.2, fixed = TRUE ) + gwdsp(0.2, fixed = TRUE) + isolates(),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 15000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm1 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") +
gwdegree(0.2, fixed = TRUE ) + gwdsp(0.2, fixed = TRUE) + isolates(),
control = ergm::control.ergm(MCMC.burnin = 1000,
MCMC.samplesize = 5000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm1 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") +
gwdegree(0.2, fixed = TRUE ) + gwdsp(0.2, fixed = TRUE) + isolates(),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 15000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm1 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") +
gwdegree(1:6, fixed = TRUE ) + gwdsp(0.2, fixed = TRUE) + isolates(),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 15000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm1 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") +
degree(1:6) + gwdsp(0.2, fixed = TRUE) + isolates(),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 15000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm1 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") +
gwdegree(0.2, fixed = TRUE) + gwdsp(0.2, fixed = TRUE) + isolates() ,
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 15000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm1 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") +
gwdegree(0.2, fixed = TRUE) + gwdsp(0.2, fixed = TRUE) + isolates() + kstar(3) ,
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 15000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm1 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age"),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 15000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
summary(ergm1)
ergm1 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(1:6),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 15000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm1 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(3),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 15000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
mcmc.diagnostics(ergm1)
ergm::mcmc.diagnostics(ergm1)
ergm::gof(ergm1)
ergm2 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(3) + gwdsp(0.2, fixed = TRUE),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 15000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm::mcmc.diagnostics(ergm2)
ergm1 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(3),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 20000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
summary(ergm1)
ergm::mcmc.diagnostics(ergm1)
ergm2 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(3) + gwdsp(0.2, fixed = TRUE),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 20000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm::mcmc.diagnostics(ergm2)
ergm1 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(3),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 25000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
#summary(ergm1)
ergm::mcmc.diagnostics(ergm1)
ergm::gof(ergm1)
ergm2 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(3) + gwdsp(0.2, fixed = TRUE),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 25000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm::mcmc.diagnostics(ergm2)
ergm2 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(3) + isolates(),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 25000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm2 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + isolates(),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 25000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm2 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(3) + degree(1) + gwdsp(0.2, fixed = TRUE),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 25000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm::mcmc.diagnostics(ergm2)
ergm2 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(3) + degree(2) + gwdsp(0.2, fixed = TRUE),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 25000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm2 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + gwdsp(0.2, fixed = TRUE),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 25000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm::mcmc.diagnostics(ergm2)
ergm::gof(ergm2)
# ergm3 with only kstar(3)
ergm3 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(3) + kstar(3),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 25000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
# ergm3 with only kstar(3)
ergm3 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + kstar(3),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 25000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
# ergm3 with only kstar(3)
ergm3 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + kstar(2),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 25000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
# ergm3 with only kstar(3)
ergm3 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + isolates(),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 25000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
??kstar
# ergm3 with only kstar(3)
ergm3 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + gwesp(0.2, fixed = TRUE),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 25000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
# ergm3 with only kstar(3)
ergm3 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(3) + gwdsp(0.2, fixed = TRUE),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 25000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm::mcmc.diagnostics(ergm3)
# ergm3 with only kstar(3)
ergm3 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(3) + gwdsp(0.2, fixed = TRUE),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 35000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm::mcmc.diagnostics(ergm3)
# ergm3 with only kstar(3)
ergm3 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(3) + gwdsp(0.2, fixed = TRUE),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 50000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm::mcmc.diagnostics(ergm3)
ergm::gof(ergm3)
summary(ergm3)
ergm4 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(3) + gwdsp(0.2, fixed = TRUE) + kstar(3),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize =10000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm4 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(0) ,
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize =10000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
# kstar(3) test
ergm4 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(0),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 25000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
kstar/sum(kstar)
# kstar(3) test
ergm4 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + kstar(3:6),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 25000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
# kstar(3) test
ergm4 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + kstar(5),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 25000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
# kstar(3) test
ergm4 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + kstar(4),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 25000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm::mcmc.diagnostics(ergm4)
ergm::gof(ergm4)
# All hypothesis terms included in the model
ergm6 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(3) +
gwdsp(0.2, fixed = TRUE) + kstar(4),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 50000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
# All hypothesis terms included in the model
ergm6 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(3) +
gwdsp(0.2, fixed = TRUE) + kstar(4),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 25000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
# All hypothesis terms included in the model
ergm6 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(3) +
gwdsp(0.2, fixed = TRUE) + kstar(4),
control = ergm::control.ergm(MCMC.burnin = 2000,
MCMC.samplesize = 10000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm::mcmc.diagnostics(ergm1)
ergm::gof(ergm1)
plot(ergm::gof(ergm1))
ergm::mcmc.diagnostics(ergm2)
plot(ergm::gof(ergm2))
ergm::mcmc.diagnostics(ergm3)
ergm::gof(ergm3)
plot(ergm::gof(ergm3))
ergm7 <- ergm::ergm(edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(3) + gwdsp(0.4, fixed = TRUE),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 50000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm7 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(3) + gwdsp(0.4, fixed = TRUE),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 50000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm::mcmc.diagnostics(ergm6)
ergm::mcmc.diagnostics(ergm7)
plot(right_network_netpackage)
plot(ergm::gof(ergm7))
ergm7 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(3) + gwdsp(0.2, fixed = TRUE) + degree(0),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 25000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
ergm7 <- ergm::ergm(right_network_netpackage ~ edges + nodecov("Seats_2021") + nodecov("Seats_2023") +
nodecov("Left_Right") + nodefactor("is_coalition_2021") + nodecov("Age") + degree(3) + gwdsp(0.2, fixed = TRUE) + gwesp(0.2, fixed = TRUE),
control = ergm::control.ergm(MCMC.burnin = 5000,
MCMC.samplesize = 25000, seed = 234567, MCMLE.maxit = 20,
parallel = 12
, parallel.type = "PSOCK"
))
